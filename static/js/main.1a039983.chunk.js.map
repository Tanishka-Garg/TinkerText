{"version":3,"sources":["components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","onClick","toggleMode","role","for","TextForm","str","_useState","useState","_useState2","_slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","rows","backgroundColor","toUpperCase","toLowerCase","copyText","split","join","disabled","length","navigator","clipboard","writeText","alert","trim","Math","round","prototype","PropTypes","string","isRequired","defaultProps","App","setMode","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1a039983.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container\">\r\n     <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">        \r\n        {/* <li className=\"nav-item dropdown\">\r\n          <a className=\"nav-link dropdown-toggle\" href=\"/\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            Dropdown\r\n          </a>\r\n          <ul className=\"dropdown-menu\">\r\n            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n            <li><hr className=\"dropdown-divider\"/></li>\r\n            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n          </ul>\r\n        </li> */}\r\n      \r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">Dark mode</label>\r\n          </div>\r\n    </div>\r\n    </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.prototype = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\nNavbar.defaultProps = {\r\n    title: 'set a title',\r\n}","import React, {useState}  from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpOnClick = () => {\r\n    setText(text.toUpperCase())\r\n  }\r\n  const handleLowOnClick = () => {\r\n    setText(text.toLowerCase())\r\n  }\r\n  const clearOnClick = () => {\r\n    setText(\"\")\r\n  }\r\n  const copyOnClick = () => {\r\n    let copyText = text;\r\n    navigator.clipboard.writeText(copyText);\r\n    alert(\"Copied to clipboard\")\r\n    \r\n  }\r\n  \r\n  const handleExtraSpaces = () => {\r\n    let copyText = text.split(/[ ]+/)\r\n    setText(copyText.join(\" \"))\r\n  }\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value)\r\n  }\r\n  const wordCount = (str) => {\r\n    if (str === '') {\r\n      return 0;\r\n    }\r\n    else {\r\n      return str.trim().split(/\\s+/).length;\r\n    }\r\n  }\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n    \r\n      <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}}>\r\n        <h1>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea className=\"form-control\" value={text} onChange={handleOnChange} id=\"Textarea\"\r\n            rows=\"7\" style={{backgroundColor: props.mode==='light'?'white':'#121212', color: props.mode==='light'?'black':'white' }}></textarea>\r\n      </div>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleUpOnClick}>to uppercase</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleLowOnClick}>to lowercase</button>\r\n        <button className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpaces}>remove extra spaces</button>\r\n        <div>\r\n          <button className=\"btn btn-primary mx-2 my-2\" onClick={clearOnClick}>clear</button>\r\n          <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-2\" onClick={copyOnClick}>copy</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"container my-2 mx-1\" style={{color: props.mode==='light'?'black':'white'}}>\r\n        <h2>Text Summary</h2>\r\n        <p>{wordCount(text)} words  {text.length} characters</p>\r\n        <p> read time: { Math.round(0.006*text.split(\" \").length)} minutes</p>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","import { useState } from 'react';\nimport React, { Component }  from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n\nfunction App() {\n  let [mode, setMode] = useState('light');\n\n  const toggleMode=()=> {\n    if (mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = '#121212';\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = 'white';\n    }\n  }\n  return (\n    <>\n      <Navbar title=\"TinkerText\" mode={mode} toggleMode={toggleMode} />\n      <div className='container my-4'>\n          <TextForm heading = \"Enter Text Here\" mode={mode} />\n      </div>\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}